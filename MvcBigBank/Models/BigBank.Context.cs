//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcBigBank.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_BankProjectEntities2 : DbContext
    {
        public db_BankProjectEntities2()
            : base("name=db_BankProjectEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Firmalar> Firmalar { get; set; }
        public virtual DbSet<Hesap> Hesap { get; set; }
        public virtual DbSet<Islemler> Islemler { get; set; }
        public virtual DbSet<Musteri> Musteri { get; set; }
        public virtual DbSet<Odemeler> Odemeler { get; set; }
        public virtual DbSet<ParaTransferleri> ParaTransferleri { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_Deactivate(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Deactivate", idParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_HesapOlustur(string tcKimlik, Nullable<decimal> bakiye, Nullable<int> ekNo)
        {
            var tcKimlikParameter = tcKimlik != null ?
                new ObjectParameter("tcKimlik", tcKimlik) :
                new ObjectParameter("tcKimlik", typeof(string));
    
            var bakiyeParameter = bakiye.HasValue ?
                new ObjectParameter("bakiye", bakiye) :
                new ObjectParameter("bakiye", typeof(decimal));
    
            var ekNoParameter = ekNo.HasValue ?
                new ObjectParameter("ekNo", ekNo) :
                new ObjectParameter("ekNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HesapOlustur", tcKimlikParameter, bakiyeParameter, ekNoParameter);
        }
    
        public virtual int sp_moneyDrawInOut(string gonderenHesapNo, Nullable<decimal> tutar)
        {
            var gonderenHesapNoParameter = gonderenHesapNo != null ?
                new ObjectParameter("gonderenHesapNo", gonderenHesapNo) :
                new ObjectParameter("gonderenHesapNo", typeof(string));
    
            var tutarParameter = tutar.HasValue ?
                new ObjectParameter("tutar", tutar) :
                new ObjectParameter("tutar", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_moneyDrawInOut", gonderenHesapNoParameter, tutarParameter);
        }
    
        public virtual int sp_moneyTransfer(string gonderenHesapNo, string aliciHesapNo, Nullable<decimal> tutar)
        {
            var gonderenHesapNoParameter = gonderenHesapNo != null ?
                new ObjectParameter("gonderenHesapNo", gonderenHesapNo) :
                new ObjectParameter("gonderenHesapNo", typeof(string));
    
            var aliciHesapNoParameter = aliciHesapNo != null ?
                new ObjectParameter("aliciHesapNo", aliciHesapNo) :
                new ObjectParameter("aliciHesapNo", typeof(string));
    
            var tutarParameter = tutar.HasValue ?
                new ObjectParameter("tutar", tutar) :
                new ObjectParameter("tutar", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_moneyTransfer", gonderenHesapNoParameter, aliciHesapNoParameter, tutarParameter);
        }
    
        public virtual int sp_payTheBill(string musteriHesapNo, Nullable<decimal> tutar)
        {
            var musteriHesapNoParameter = musteriHesapNo != null ?
                new ObjectParameter("musteriHesapNo", musteriHesapNo) :
                new ObjectParameter("musteriHesapNo", typeof(string));
    
            var tutarParameter = tutar.HasValue ?
                new ObjectParameter("tutar", tutar) :
                new ObjectParameter("tutar", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_payTheBill", musteriHesapNoParameter, tutarParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_update(string tc, string ad, string soyad, string sif, Nullable<System.DateTime> dgmT, string tel, string e, string adres)
        {
            var tcParameter = tc != null ?
                new ObjectParameter("tc", tc) :
                new ObjectParameter("tc", typeof(string));
    
            var adParameter = ad != null ?
                new ObjectParameter("ad", ad) :
                new ObjectParameter("ad", typeof(string));
    
            var soyadParameter = soyad != null ?
                new ObjectParameter("soyad", soyad) :
                new ObjectParameter("soyad", typeof(string));
    
            var sifParameter = sif != null ?
                new ObjectParameter("sif", sif) :
                new ObjectParameter("sif", typeof(string));
    
            var dgmTParameter = dgmT.HasValue ?
                new ObjectParameter("dgmT", dgmT) :
                new ObjectParameter("dgmT", typeof(System.DateTime));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var eParameter = e != null ?
                new ObjectParameter("e", e) :
                new ObjectParameter("e", typeof(string));
    
            var adresParameter = adres != null ?
                new ObjectParameter("adres", adres) :
                new ObjectParameter("adres", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update", tcParameter, adParameter, soyadParameter, sifParameter, dgmTParameter, telParameter, eParameter, adresParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
